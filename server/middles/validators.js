const validator = require("email-validator");const bcrypt = require('bcrypt');const userDB = require('../schemas/userSchema')const adDb = require("../schemas/adSchema");module.exports = {    registerCheck: async (req, res, next) => {        const {email, passwordOne, passwordTwo} = req.body        const emailExists = await userDB.findOne({email})        if (!!emailExists) return await res.send({success: false, message: 'Email exists'})        if (!validator.validate(email)) return await res.send({success: false, message: 'Wrong email'})        if (passwordOne.length < 5 || passwordOne.length > 20) return await res.send({            success: false,            message: 'Check password one'        })        if (passwordOne !== passwordTwo) return await res.send({success: false, message: 'Check passwords'})        next()    },    loginCheck: async (req, res, next) => {        const {email, password} = req.body        const userExists = await userDB.findOne({email})        if (!(!!userExists)) return await res.send({success: false, message: 'User not registered'})        const checkPassword = await bcrypt.compare(password, userExists.password)        if (!checkPassword) return await res.send({success: false, message: 'Wrong password'})        next()    },    checkAd: (req, res, next) => {        const {photos, city, price, description} = req.body        if (photos.length === 0) return res.send({success: false, message: 'Add photos'})        if (city.length === 0) return res.send({success: false, message: 'Add city'})        if (price.length === 0) return res.send({success: false, message: 'Add price'})        if (description.length === 0) return res.send({success: false, message: 'Add description'})        next()    },    checkReservation: async (req, res, next) => {        const {adID, days} = req.body        if (days[0] === 0) return res.send({            success: false,            message: "Select reservation days"        })        const ad = await adDb.findOne({_id: adID})        for (const day of days) {            if (ad.reservation.includes(day)) return res.send({                success: false,                message: "Cant`t make a reservation on these days"            })        }        next()    }}